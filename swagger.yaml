openapi: '3.0.3'
info:
  description: API Document for movie website.
  title: Movie Booking
  license:
   name: Apache 2.0
   url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: '0.4'
servers:
  - url: https://movie.amirrezasoltani.ir

paths:
  /event:
    put:
      description: "add new event"
      tags:
        - Event
      parameters:
       - in: header
         name: x-auth-token
         schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              properties:
                eventDate:
                  type: string
                eventName:
                  type: string
                eventType:
                  type: string
                  enum:
                    - movie
                    - activity
                    - event
                genre:
                 type: string
                activityType:
                 type: string
                eventCategory:
                 type: string
                eventDetails:
                  type: string
                Rows:
                  type: integer
                seatsPerRow:
                  type: integer
      
      responses:
        '200':
          description: OK
    post:
      description: "edit event"
      tags:
        - Event
      parameters:
       - in: header
         name: x-auth-token
         schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              properties:
                eventDate:
                  type: string
                eventName:
                  type: string
                eventDetails:
                  type: string
                Rows:
                  type: integer
                seatsPerRow:
                  type: integer
      
      responses:
        '200':
          description: OK
    get:
      description: "get events if all:true you will get all events of DB"
      tags:
        - Event
      parameters:
        - in: query
          name: all
          schema:
            type: boolean
          description: if true sends all events

      responses:
        '200':
          description: OK                
    delete:
      tags:
        - Event
      parameters:
       - in: header
         name: x-auth-token
         schema:
            type: string
      description: "just send event id"
      requestBody:
        content:
          application/json:
            schema:      
              type: object
              properties:
                eventID:
                  type: string
      responses:
        '200':
          description: OK 
  /admin:
    get:
      tags:
        - Admin
      responses:
        '200':
          description: OK
    put:
      description: "add new admin"
      tags:
        - Admin
      parameters:
       - in: header
         name: x-auth-token
         schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              properties:
                Username:
                  type: string
      responses:
        '200':
          description: OK
    delete:
      description: "remove admin"
      tags:
        - Admin
      parameters:
       - in: header
         name: x-auth-token
         schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              properties:
                Username:
                  type: string
                adminID:
                   type: string
      responses:
        '200':
          description: OK
  /user:
    put:
      description: "register user"
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              properties:
                Username:
                  type: string
                Email:
                  type: string
                Password:
                  type: string
      responses:
        '200':
          description: OK
    get:
      description: "get user info"
      tags:
        - User
      parameters:
       - in: header
         name: x-auth-token
         schema:
            type: string

      responses:
        '200':
          description: OK
    post:
      description: "edit user info"
      tags:
        - User
      parameters:
       - in: header
         name: x-auth-token
         schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              properties:
                Email:
                  type: string
                Username:
                  type: string
                Password:
                  type: string
      responses:
        '200':
          description: OK
  /user/login:
    post:
      description: "login user"
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              properties:
                Username:
                  type: string
                Password:
                  type: string
      responses:
        '200':
          description: "ok"

  /booking:
    post:
      description: "doesn't work"
      tags:
        - Booking
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              properties:
                EventID:
                  type: string
      responses:
        '200':
          description: "ok"
